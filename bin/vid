#!/bin/sh
USAGE="""
Usage:
  vid split [FILE] [TIMES...]
  vid rotate [cw,ccw,f] [FILE]
  vid join [-o FILE] [FILES...]
  vid audio [-o FILE] [FILE] [TIMES]
  vid deborder [-s skip_frames | -m w:h:x:y] [FILE]
  vid resolution [FILE]
"""
TIME="[0-9:]\+"
CACHEDIR=${XDG_CACHE_HOME:-"$HOME/.cache/"}/vid
FFMPEG="ffmpeg -v warning"
mkdir -p "$CACHEDIR"
CMD="$CACHEDIR/cmd"

split() {
    input=$1
    base="${input%.*}"
    ext="${input##*.}"
    cmd="$FFMPEG -i \'$input\' -vcodec copy -acodec copy -ss \2 -to \3 \'$base-\1.$ext\'"
    shift
    input="$*"

    times=$(
        echo "$input" |
            sed -e "s/-\($TIME\)-/-\1 \1-/g" \
                -e "s/-\($TIME\)-/-\1 \1-/g" \
                -e 's/ /\n/g' |
            nl -s' ' |
            sed -ne "/^ *[0-9]\+ $TIME-$TIME/p"
         )
    if [ -z "$times" ]; then
        echo "No valid times found"
        exit 1
    elif [ -z "$DEBUG" ]; then
        echo Times:
        echo "$times"
    fi

    echo "$times" | sed "s/ \+\([0-9]\)\+ \($TIME\)-\($TIME\)/$cmd/" > "$CMD"
    process
}

rotate() {
    case "$1" in
        "cw") direction=1 ;;
        "ccw") direction=2 ;;
        "f") direction="2,transpose=2" ;;
        *)
            echo "Invalid direction $1"
            echo 'Use "cw", "ccw", or "f"'
            exit 1
        ;;
    esac
    input=$2
    base="${input%.*}"
    ext="${input##*.}"
    echo "$FFMPEG -i '$input' -vf transpose=$direction '$base-$1.$ext'" > "$CMD"
    process
}

join() {
    rm "$CACHEDIR/filelist"
    if [ "$1" = '-o' ]; then
        target=$2
        shift 2
    else
        ext="${1##*.}"
        target="output.$ext"
    fi
    for i in "$@"; do
        echo file "'$PWD/$i'" >> "$CACHEDIR/filelist"
    done
    echo "Target: $target"

    echo "$FFMPEG -f concat -safe 0 -i '$CACHEDIR/filelist' -c copy '$target'" > "$CMD"
    process
}

audio() {
    if [ "$1" = '-o' ]; then
        target=$2
        shift 2
    else
        base="${1%.*}"
        target="$base.mp3"
    fi
    input=$1
    shift
    if [ -n "$1" ]; then
        echo "$FFMPEG -i '$input' -ss ${1%-*} -to ${1##*-} -vn '$target'" > "$CMD"
    else
        echo "$FFMPEG -i '$input' -vn '$target'" > "$CMD"
    fi
    process
}

deborder() {
    if [ "$1" = "-m" ]; then
	crop="crop=$2"
	shift 2
    else
	if [ "$1" = "-s" ]; then
	    skip=$2
	    shift 2
	else
	    skip=150
	fi

	crop=$(ffmpeg -ss $skip -i "$input" -vframes 10 -vf cropdetect -f null - 2>&1 | grep -E -o -m1 'crop=[0-9:]+')

	if [ -z "$crop" ]; then
	    echo "Nothing to crop. Try setting -s 0"
	    exit
	fi
    fi
    input="$1"
    target="${1%.*}-deb.${1##*.}"
    echo "Cropping with $crop."
    echo "$FFMPEG -i '$input' -vf '$crop' '$target'" > "$CMD"
    process
}

resolution() {
    ffprobe -v warning -select_streams v:0 -show_entries stream=width,height \
            -of default=nw=1:nk=1 "$1"
}

process() {
    if [ -z "$DEBUG" ]; then
        echo "Processing..."
        sh "$CMD" && echo "Done."
    else
        cat "$CMD"
    fi
}

if [ "$1" = '-d' ]; then
    DEBUG="debug"
    shift
else
    DEBUG=""
fi
action=$1
shift

case "$action" in
    split) split "$@";;
    resolution) resolution "$@";;
    rotate) rotate "$@";;
    join) join "$@";;
    audio) audio "$@";;
    deborder) deborder "$@";;
    *) echo "$USAGE"; exit 1;;
esac
